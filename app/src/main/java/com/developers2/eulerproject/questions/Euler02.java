package com.developers2.eulerproject.questions;

import android.util.Log;

import java.math.BigInteger;

public abstract class Euler02 {
    private static String problemEnunciation = "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n" +
            "\n" +
            "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n" +
            "\n" +
            "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";

    public static String solution() {
        long sum = 0;
        long penultimate = 0;
        long lastNumber = 0;
        long actualNumber = 1;
        while (actualNumber < 4000000) {
            penultimate = lastNumber;
            lastNumber = actualNumber;
            actualNumber = lastNumber + penultimate;

            if ( (actualNumber & 1) == 0 ) {
                sum += actualNumber;
                Log.d("TAG", "even actual number: " + actualNumber);
            }
        }
        Log.d("TAG", "sum: " + sum);
        return String.valueOf(sum);
    }

    public static String getProblemEnunciation() {
        return problemEnunciation;
    }
}
